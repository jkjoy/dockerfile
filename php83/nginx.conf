user nginx;
worker_processes auto;  # 自动匹配 CPU 核心数
worker_rlimit_nofile 65535;  # 提高 worker 的文件描述符限制

error_log /var/log/nginx/error.log warn;  # 错误日志级别调整为 warn
pid /var/run/nginx.pid;

events {
    worker_connections 8192;  # 提高单个 worker 的连接数
    use epoll;  # Linux 高效事件模型
    multi_accept on;  # 批量接受新连接
    accept_mutex on;  # 避免惊群效应
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式优化（静态资源不记录）
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time"';

    map $uri $loggable {
        ~*\.(jpg|png|css|js|ico|svg|woff2)$ 0;
        default 1;
    }
    access_log /var/log/nginx/access.log main if=$loggable;

    # 核心传输优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;  # 隐藏 Nginx 版本号

    # 连接控制
    keepalive_timeout 30s;
    keepalive_requests 1000;
    reset_timedout_connection on;  # 关闭超时连接释放资源

    # 客户端限制
    client_max_body_size 50M;
    client_body_buffer_size 16k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;

    # 流量限制（防 CC/DDoS）
    limit_req_zone $binary_remote_addr zone=req_limit:10m rate=10r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # Gzip 压缩优化
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
    gzip_disable "msie6";

    # 文件缓存优化
    open_file_cache max=200000 inactive=30s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;

    # 安全头
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;";

    # 动态请求处理（PHP-FPM）
    upstream php_backend {
        server unix:/run/php/php8.3-fpm.sock;
        keepalive 16;  # 复用 PHP-FPM 连接
    }

    include /etc/nginx/sites-enabled/*;
}